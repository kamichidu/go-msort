// Auto generated code; DO NOT EDIT THIS FILE
package compare

import (
    "testing"

    "github.com/stretchr/testify/assert"
)

{{ range $item := $.items }}
func Test{{ $item.name }}(t *testing.T) {
    cases := []struct {
        V    int
        A, B {{ $item.type }}
    }{
        {0, 10, 10},
        {-1, 10, 100},
        {1, 100, 10},
    }
    for _, c := range cases {
        assert.Equalf(t, c.V, {{ $item.name }}(c.A, c.B), "%v <=> %v", c.A, c.B)
    }
}

func Test{{ $item.name }}Ptr(t *testing.T) {
    to := func(v {{ $item.type }}) *{{ $item.type }} {
        return &v
    }
    cases := []struct {
        V    int
        A, B *{{ $item.type }}
    }{
        {0, nil, nil},
        {0, to(10), to(10)},
        {-1, to(10), to(100)},
        {1, to(100), to(10)},
    }
    for _, c := range cases {
        assert.NotPanicsf(t, func() {
            assert.Equalf(t, c.V, {{ $item.name }}Ptr(NilFirst)(c.A, c.B), "%v <=> %v", c.A, c.B)
        }, "%v <=> %v", c.A, c.B)
    }
}
{{ end }}
